<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mdily的博客</title>
    <description></description>
    <link>http://localhost:4001/</link>
    <atom:link href="http://localhost:4001/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 27 Nov 2018 22:17:21 +0800</pubDate>
    <lastBuildDate>Tue, 27 Nov 2018 22:17:21 +0800</lastBuildDate>
    <generator>Jekyll v3.8.0</generator>
    
      <item>
        <title>浅谈Linux程序管理</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#进程查看&quot; id=&quot;markdown-toc-进程查看&quot;&gt;进程查看&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#进程的管理&quot; id=&quot;markdown-toc-进程的管理&quot;&gt;进程的管理&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#系统资源的查看&quot; id=&quot;markdown-toc-系统资源的查看&quot;&gt;系统资源的查看&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#网络管理&quot; id=&quot;markdown-toc-网络管理&quot;&gt;网络管理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;进程查看&quot;&gt;进程查看&lt;/h3&gt;

进程查看常见的命令有：ps，top

&lt;ul&gt;
  &lt;li&gt;
    ps：将某个时间点的进程运行情况选取出来

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ps aux  &amp;lt;== 查看系统所有进程数据
    
  ps aux | grep `service name`   &amp;lt;== 显示具体某个服务的进程信息
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    top： 动态查询进程的变化

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  top   &amp;lt;==  查看所有进程的变化情况
    
  top -d `TIME` -p `PID`   &amp;lt;== `TIME`秒刷新一次只查看进程ID`PID`的进程
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;进程的管理&quot;&gt;进程的管理&lt;/h3&gt;

进程管理的命令：kill，killall

&lt;ul&gt;
  &lt;li&gt;
    kill：通过PID管理进程 &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -signal PID&lt;/code&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  kill -9 PID  &amp;lt;== 强制中断一个进程的进行
    
  kill -1 PID  &amp;lt;== 启动被终止的进程
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    killall：通过进程名称管理进程 &lt;code class=&quot;highlighter-rouge&quot;&gt;killall -signal [command name]&lt;/code&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 比如：killall -9 httpd   强制终于所有以httpd启动的进程
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;系统资源的查看&quot;&gt;系统资源的查看&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    查看内存使用情况：free

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  free -m  &amp;lt;== 查看内存使用情况，使用单位MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    查看系统与内核信息：uname

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  uname -a  &amp;lt;== 输出系统的基本信息
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    查看CUP使用情况：vmstat

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  vmstat 1 3  &amp;lt;== 统计目前主机CPU状态，每秒一次，共3次
    
  vmstat -d &amp;lt;== 磁盘的读写状态
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;网络管理&quot;&gt;网络管理&lt;/h3&gt;

网络管理命令：netstat

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat -[atunlp]

    -a: 将系统上所有的连接、监听、Socket数据都列出来
    -t: 列出所有tcp网络数据包
    -u: 列出所有udp网络数据包
    -n: 端口号
    -l: 正在监听的网络
    -p: 进程PID
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 26 Nov 2018 04:30:00 +0800</pubDate>
        <link>http://localhost:4001/2018/11/26/process-manage/</link>
        <guid isPermaLink="true">http://localhost:4001/2018/11/26/process-manage/</guid>
        
        <category>linux</category>
        
        <category>process</category>
        
        <category>centos</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>浅谈算法分析-算法复杂度</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#算法复杂度&quot; id=&quot;markdown-toc-算法复杂度&quot;&gt;算法复杂度&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#基本程序复杂度分析&quot; id=&quot;markdown-toc-基本程序复杂度分析&quot;&gt;基本程序复杂度分析&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

《数据结构与算法 Python语言描述》算法分析笔记

&lt;h2 id=&quot;算法复杂度&quot;&gt;算法复杂度&lt;/h2&gt;

常见的复杂度函数：O(1), O(log n), O(n), O(n log n), O(n^2), O(n^3), O(2^n)

&lt;img src=&quot;http://i.imgur.com/LpD7WBD.png&quot; alt=&quot;image-O(g(n))&quot; /&gt;

从上图可以看到，算法复杂度函数&lt;strong&gt;由简单到复杂&lt;/strong&gt;排序：O(1) &amp;lt; O(log n) &amp;lt; O(n) &amp;lt; O(n log n) &amp;lt; O(n^2) &amp;lt; O(n^3) &amp;lt; O(2^n)；复杂度越高，其实施的代价随着规模的增大而增长的速度就越快。

&lt;h3 id=&quot;基本程序复杂度分析&quot;&gt;基本程序复杂度分析&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    基本操作：O(1)，例如基本的复赋值语句。
  &lt;/li&gt;
  &lt;li&gt;
    加法规则（顺序结构）：T(n) = T1(n) + T2(n) = O(T1(n)) + O(T2(n)) = O(max(T1(n), T2(n)))，即取的是复杂度较高的一个程序。
  &lt;/li&gt;
  &lt;li&gt;
    乘法规则（循环结构）：T(n) = T1(n) * T2(n) = O(T1(n)) * O(T2(n)) = O(T1(n) * T2(n))，循环体将执行T1(n)次，每次执行需要T2(n)时间。
  &lt;/li&gt;
  &lt;li&gt;
    取最大规则（分支结构）：T(n) = O(max(T1(n), T2(n)))
  &lt;/li&gt;
&lt;/ul&gt;

看一个简单的实例：

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

第一个循环：O(n)；第二个循环：O(n)；第三个循环：O(n)

T(n) = O(n) * O(n) * O(n) = O(n^3)

以上就是简单的程序复杂度分析……

这是我的第一篇blog，共勉。

</description>
        <pubDate>Thu, 15 Nov 2018 07:30:00 +0800</pubDate>
        <link>http://localhost:4001/2018/11/15/analysis-of-algorithms/</link>
        <guid isPermaLink="true">http://localhost:4001/2018/11/15/analysis-of-algorithms/</guid>
        
        <category>algorithms</category>
        
        <category>python</category>
        
        
        <category>Algorithms</category>
        
      </item>
    
  </channel>
</rss>
